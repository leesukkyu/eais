{"version":3,"sources":["public/CONFIG.js","RecentlyTab.js","SearchTab.js","App.js","index.js"],"names":["SEARCH_URL","COLLECTION_SEARCH_URL","moment","locale","weekdays","weekdaysShort","RecentlyTab","props","state","isModalOpen","isLoading","tableList","rs","docs","totalDocs","limit","totalPages","page","pagingCounter","hasPrevPage","hasNextPage","prevPage","nextPage","onClickLoadBtn","bind","this","setState","axios","get","then","concat","data","item","console","log","Fragment","style","position","width","top","zIndex","LinearProgress","variant","TableContainer","component","Paper","maxHeight","boxSizing","padding","Table","TableHead","TableRow","TableCell","TableBody","map","index","key","platPlc","bldNm","splotNm","jimokCdNm","jiyukCdNm","jiguCdNm","platArea","archArea","bcRat","totArea","stcnsSchedDay","stcnsDelayDay","realStcnsDay","archPmsDay","useAprDay","crtnDay","time","format","Button","color","onClick","onClickModalOpenBtn","Icon","TableFooter","colSpan","Modal","open","onClose","onClickModalCloseBtn","Grid","container","direction","justify","alignItems","height","overflow","xs","sm","React","Component","App","searchMonth","sidoCode","sidoList","sigoonCode","sigoonList","dongCode","dongList","searchStr","searchCode","searchResultList","tablePage","tableTotalCount","handleChange","$httpLoadArchInfo","onClickBubjungdongSearchBtn","onClickChips","onClickSelectSearchBtn","onChangePage","onChangeSearchMonth","$httpLoadSidoCodeList","code","i","bubjungdongList","indexOf","push","name","obj","e","target","value","params","authkey","admVOList","admCode","serviceKey","decodeURIComponent","sigunguCd","slice","bjdongCd","platGbCd","bun","ji","startDate","subtract","endDate","numOfRows","pageNo","items","totalCount","event","$httpLoadSigoonCodeList","$httpLoadDongCodeList","margin","NativeSelect","onChange","marginRight","className","admCodeNm","Input","placeholder","onKeyUp","keyCode","Chip","size","label","deleteIcon","marginTop","stickyHeader","aria-label","vlRat","mainBldCnt","atchBldDongCnt","mainPurpsCdNm","hhldCnt","hoCnt","fmlyCnt","totPkngCnt","silHoHhldCnt","silHoHhldArea","TablePagination","count","rowsPerPage","SelectProps","display","useStyles","makeStyles","tabPanel","TabPanel","children","other","Typography","role","hidden","id","Box","p","ReactDOM","render","useState","setValue","classes","AppBar","Tabs","newValue","Tab","SearchTab","document","getElementById"],"mappings":"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","file":"static/js/main.66e434b6.chunk.js","sourcesContent":["export const SEARCH_MONTH = 6;\nexport const SIDO_CODE_URL = \"http://openapi.nsdi.go.kr/nsdi/eios/service/rest/AdmService/admCodeList.json\";\nexport const SIDO_CODE_KEY = \"\";\nexport const SIGOON_CODE_URL = \"http://openapi.nsdi.go.kr/nsdi/eios/service/rest/AdmService/admSiList.json\";\nexport const SIGOON_CODE_KEY = \"\";\nexport const DONG_CODE_URL = \"http://openapi.nsdi.go.kr/nsdi/eios/service/rest/AdmService/admDongList.json\";\nexport const DONG_CODE_KEY = \"\";\n\nexport const SEARCH_KEY = \"\";\n\nconst SERVER_URL = process.env.NODE_ENV == \"development\" ? \"http://localhost:5001\" : \"\";\n\nexport const SEARCH_URL = `${SERVER_URL}/api/search`;\nexport const COLLECTION_SEARCH_URL = `${SERVER_URL}/api/collection`;\n","import React from 'react';\n\nimport axios from 'axios';\n\nimport Modal from '@material-ui/core/Modal';\nimport Icon from '@material-ui/core/Icon';\nimport Button from '@material-ui/core/Button';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport Grid from '@material-ui/core/Grid';\n\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nimport Paper from '@material-ui/core/Paper';\n\nimport moment from 'moment';\n\nimport { COLLECTION_SEARCH_URL } from './public/CONFIG';\n\nmoment.locale('ko', {\n  weekdays: ['일요일', '월요일', '화요일', '수요일', '목요일', '금요일', '토요일'],\n  weekdaysShort: ['일', '월', '화', '수', '목', '금', '토'],\n});\n\nclass RecentlyTab extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isModalOpen: false,\n      isLoading: false,\n      tableList: [],\n      rs: {\n        docs: [],\n        totalDocs: null,\n        limit: null,\n        totalPages: null,\n        page: null,\n        pagingCounter: null,\n        hasPrevPage: null,\n        hasNextPage: null,\n        prevPage: null,\n        nextPage: 1,\n      },\n    };\n\n    this.onClickLoadBtn = this.onClickLoadBtn.bind(this);\n  }\n\n  componentDidMount() {\n    this.onClickLoadBtn();\n  }\n\n  // 검색하기 누른 경우\n  onClickLoadBtn() {\n    let page;\n    page = this.state.rs.nextPage;\n    if (page) {\n      this.setState({\n        ...this.state,\n        isLoading: true,\n      });\n      axios.get(`${COLLECTION_SEARCH_URL}/${page}`).then(rs => {\n        this.state.tableList = this.state.tableList.concat(rs.data.docs);\n        this.setState({\n          ...this.state,\n          isLoading: false,\n          rs: rs.data,\n        });\n      });\n    }\n  }\n\n  onClickModalOpenBtn(item) {\n    console.log(this);\n    console.log(item);\n    this.setState({\n      ...this.state,\n      isModalOpen: true,\n    });\n  }\n\n  render() {\n    const { tableList, isLoading, isModalOpen } = this.state;\n    const { hasNextPage } = this.state.rs;\n    return (\n      <React.Fragment>\n        <div style={{ position: 'fixed', width: '100%', top: '60px', zIndex: 1 }}>\n          {isLoading ? <LinearProgress variant=\"query\" /> : null}\n        </div>\n        <TableContainer\n          component={Paper}\n          style={{\n            maxHeight: '100%',\n            width: '100%',\n            boxSizing: 'border-box',\n            padding: '0',\n          }}\n        >\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>대지위치</TableCell>\n                <TableCell>건물명</TableCell>\n                <TableCell>특수지명</TableCell>\n\n                <TableCell>지목코드명</TableCell>\n                <TableCell>지역코드명</TableCell>\n                <TableCell>지구코드명</TableCell>\n\n                <TableCell>대지면적(㎡)</TableCell>\n                <TableCell>건축면적(㎡)</TableCell>\n                <TableCell>건폐율(%)</TableCell>\n                <TableCell>연면적(㎡)</TableCell>\n\n                <TableCell>착공예정일</TableCell>\n                <TableCell>착공연기일</TableCell>\n                <TableCell>실제착공일</TableCell>\n                <TableCell>건축허가일</TableCell>\n                <TableCell>사용승인일</TableCell>\n                <TableCell>생성일자</TableCell>\n\n                <TableCell>수집일</TableCell>\n                <TableCell></TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {tableList.map((item, index) => (\n                <TableRow key={index}>\n                  <TableCell>{item.platPlc}</TableCell>\n                  <TableCell>{item.bldNm}</TableCell>\n                  <TableCell>{item.splotNm}</TableCell>\n\n                  <TableCell>{item.jimokCdNm}</TableCell>\n                  <TableCell>{item.jiyukCdNm}</TableCell>\n                  <TableCell>{item.jiguCdNm}</TableCell>\n\n                  <TableCell>{item.platArea}</TableCell>\n                  <TableCell>{item.archArea}</TableCell>\n                  <TableCell>{item.bcRat}</TableCell>\n                  <TableCell>{item.totArea}</TableCell>\n\n                  <TableCell>{item.stcnsSchedDay}</TableCell>\n                  <TableCell>{item.stcnsDelayDay}</TableCell>\n                  <TableCell>{item.realStcnsDay}</TableCell>\n                  <TableCell>{item.archPmsDay}</TableCell>\n                  <TableCell>{item.useAprDay}</TableCell>\n                  <TableCell>{item.crtnDay}</TableCell>\n\n                  <TableCell>{moment(item.time).format('YYYYMMDD')}</TableCell>\n                  <TableCell>\n                    <Button color=\"secondary\" onClick={this.onClickModalOpenBtn.bind(this, item)}>\n                      <Icon>zoom_in</Icon>\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n            <TableFooter>\n              <TableRow>\n                <TableCell colSpan=\"21\">\n                  {hasNextPage === false ? (\n                    <div>더이상 수집 데이터가 없습니다</div>\n                  ) : (\n                    <Button color=\"secondary\" onClick={this.onClickLoadBtn}>\n                      <Icon>add_box</Icon>\n                    </Button>\n                  )}\n                </TableCell>\n              </TableRow>\n            </TableFooter>\n          </Table>\n        </TableContainer>\n\n        <Modal open={isModalOpen} onClose={this.onClickModalCloseBtn}>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n            style={{ height: '100%', overflow: 'auto', padding: '20px 0' }}\n          >\n            <Grid item xs={12} sm={6}>\n              <Paper>상세보기 기능 준비</Paper>\n            </Grid>\n          </Grid>\n        </Modal>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default RecentlyTab;\n","import React from 'react';\nimport './public/App.css';\n\nimport axios from 'axios';\n\nimport Chip from '@material-ui/core/Chip';\nimport Icon from '@material-ui/core/Icon';\nimport Input from '@material-ui/core/Input';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport Button from '@material-ui/core/Button';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableFooter from '@material-ui/core/TableFooter';\n\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nimport Paper from '@material-ui/core/Paper';\n\nimport bubjungdongList from './public/ADDRESS_DB.json';\n\nimport moment from 'moment';\n\nimport TablePagination from '@material-ui/core/TablePagination';\n\nimport {\n  SIDO_CODE_URL,\n  SIDO_CODE_KEY,\n  SIGOON_CODE_URL,\n  SIGOON_CODE_KEY,\n  DONG_CODE_URL,\n  DONG_CODE_KEY,\n  SEARCH_URL,\n  SEARCH_KEY,\n} from './public/CONFIG';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n\n      searchMonth: 6,\n\n      sidoCode: '',\n      sidoList: [],\n      sigoonCode: '',\n      sigoonList: [],\n      dongCode: '',\n      dongList: [],\n\n      searchStr: '',\n      searchCode: '',\n      searchResultList: [],\n\n      tableList: [],\n      tablePage: 0,\n      tableTotalCount: 0,\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.$httpLoadArchInfo = this.$httpLoadArchInfo.bind(this);\n    this.onClickBubjungdongSearchBtn = this.onClickBubjungdongSearchBtn.bind(this);\n    this.onClickChips = this.onClickChips.bind(this);\n    this.onClickSelectSearchBtn = this.onClickSelectSearchBtn.bind(this);\n    this.onChangePage = this.onChangePage.bind(this);\n    this.onChangeSearchMonth = this.onChangeSearchMonth.bind(this);\n  }\n\n  componentDidMount() {\n    this.$httpLoadSidoCodeList();\n  }\n\n  onClickChips(item) {\n    this.setState(\n      {\n        ...this.state,\n        tableList: [],\n        tablePage: 0,\n        searchCode: item.code,\n      },\n      () => {\n        this.$httpLoadArchInfo();\n      },\n    );\n  }\n\n  // 디비 검색\n  onClickBubjungdongSearchBtn() {\n    const { searchStr } = this.state;\n    const searchResultList = [];\n    for (var i in bubjungdongList) {\n      if (bubjungdongList[i].indexOf(searchStr) !== -1) {\n        // 현재는 동까지 정보가 입력되어야만 검색 가능\n        searchResultList.push({\n          code: i,\n          name: bubjungdongList[i],\n        });\n      }\n    }\n    this.setState({\n      ...this.state,\n      searchResultList,\n    });\n  }\n\n  onClickSelectSearchBtn() {\n    this.setState(\n      {\n        ...this.state,\n        searchStr: '',\n        searchResultList: [],\n        tableList: [],\n        tablePage: 0,\n        searchCode: this.state.dongCode + '00',\n      },\n      () => {\n        this.$httpLoadArchInfo();\n      },\n    );\n  }\n\n  onChangePage(obj, page) {\n    this.setState(\n      {\n        tableList: [],\n        tablePage: page,\n      },\n      () => {\n        this.$httpLoadArchInfo();\n      },\n    );\n  }\n\n  onChangeSearchMonth(e) {\n    const { searchCode } = this.state;\n    if (searchCode) {\n      this.setState(\n        {\n          ...this.state,\n          searchMonth: e.target.value,\n          tableList: [],\n          tablePage: 0,\n        },\n        () => {\n          this.$httpLoadArchInfo();\n        },\n      );\n    } else {\n      this.setState({\n        ...this.state,\n        searchMonth: e.target.value,\n      });\n    }\n  }\n\n  $httpLoadSidoCodeList() {\n    this.setState({\n      ...this.state,\n      isLoading: true,\n    });\n    axios\n      .get(SIDO_CODE_URL, {\n        params: { authkey: SIDO_CODE_KEY },\n      })\n      .then(({ data }) => {\n        this.setState({\n          ...this.state,\n          isLoading: false,\n          sidoList: data.admVOList.admVOList,\n          sidoCode: '',\n          sigoonCode: '',\n          sigoonList: [],\n          dongCode: '',\n          dongList: [],\n        });\n      });\n  }\n\n  $httpLoadSigoonCodeList() {\n    const { sidoCode } = this.state;\n    this.setState({\n      ...this.state,\n      isLoading: true,\n    });\n    axios\n      .get(SIGOON_CODE_URL, {\n        params: {\n          admCode: sidoCode,\n          authkey: SIGOON_CODE_KEY,\n        },\n      })\n      .then(({ data }) => {\n        this.setState({\n          ...this.state,\n          isLoading: false,\n          sigoonCode: '',\n          sigoonList: data.admVOList.admVOList,\n          dongCode: '',\n          dongList: [],\n        });\n      });\n  }\n\n  $httpLoadDongCodeList() {\n    const { sigoonCode } = this.state;\n    this.setState({\n      ...this.state,\n      isLoading: true,\n    });\n    axios\n      .get(DONG_CODE_URL, {\n        params: {\n          admCode: sigoonCode,\n          authkey: DONG_CODE_KEY,\n        },\n      })\n      .then(({ data }) => {\n        this.setState({\n          ...this.state,\n          isLoading: false,\n          dongCode: '',\n          dongList: data.admVOList.admVOList,\n        });\n      });\n  }\n\n  $httpLoadArchInfo() {\n    const { searchCode, tablePage, searchMonth } = this.state;\n    this.setState({\n      ...this.state,\n      isLoading: true,\n    });\n    axios\n      .get(SEARCH_URL, {\n        params: {\n          serviceKey: decodeURIComponent(SEARCH_KEY),\n          sigunguCd: searchCode.slice(0, 5),\n          bjdongCd: searchCode.slice(5, 10),\n          platGbCd: '0',\n          bun: '',\n          ji: '',\n          startDate: moment()\n            .subtract(+searchMonth, 'months')\n            .format('YYYYMMDD'),\n          endDate: moment().format('YYYYMMDD'),\n          numOfRows: '10',\n          pageNo: tablePage === 0 ? 1 : tablePage,\n        },\n      })\n      .then(rs => {\n        if (rs.data.items[0]) {\n          this.setState({\n            ...this.state,\n            isLoading: false,\n            tableList: rs.data.items[0].item,\n            tableTotalCount: rs.data.totalCount[0],\n          });\n        } else {\n          this.setState({\n            ...this.state,\n            isLoading: false,\n            tableList: [],\n            tableTotalCount: 0,\n          });\n        }\n      });\n  }\n\n  handleChange(name, event) {\n    this.setState(\n      {\n        ...this.state,\n        [name]: event.target.value,\n      },\n      () => {\n        const { searchCode } = this.state;\n        if (name === 'sidoCode') {\n          this.$httpLoadSigoonCodeList();\n        } else if (name === 'sigoonCode') {\n          this.$httpLoadDongCodeList();\n        }\n      },\n    );\n  }\n\n  render() {\n    const { state } = this;\n    const {\n      isLoading,\n      sidoList,\n      sigoonList,\n      dongList,\n      searchStr,\n      searchResultList,\n      searchCode,\n      tableList,\n      tablePage,\n      tableTotalCount,\n    } = state;\n\n    return (\n      <div>\n        <div style={{ position: 'fixed', width: '100%', top: '60px', zIndex: 1 }}>\n          {isLoading ? <LinearProgress variant=\"query\" /> : null}\n        </div>\n        <div style={{ padding: '25px' }}>\n          <div style={{ margin: '10px' }}>\n            최근\n            <NativeSelect value={state.searchMonth} onChange={this.onChangeSearchMonth}>\n              <option value=\"1\">1개월</option>\n              <option value=\"2\">2개월</option>\n              <option value=\"3\">3개월</option>\n              <option value=\"4\">4개월</option>\n              <option value=\"5\">5개월</option>\n              <option value=\"6\">6개월</option>\n              <option value=\"7\">7개월</option>\n              <option value=\"8\">8개월</option>\n              <option value=\"9\">9개월</option>\n              <option value=\"10\">10개월</option>\n              <option value=\"11\">11개월</option>\n              <option value=\"12\">12개월</option>\n            </NativeSelect>\n            개월간 검색\n          </div>\n          <div>\n            <NativeSelect\n              style={{\n                marginRight: '10px',\n              }}\n              className=\"mr-2\"\n              value={state.sidoCode}\n              onChange={e => {\n                this.handleChange('sidoCode', e);\n              }}\n            >\n              <option>시/도 선택</option>\n              {sidoList.map((item, index) => {\n                return (\n                  <option key={index} value={item.admCode}>\n                    {item.admCodeNm}\n                  </option>\n                );\n              })}\n            </NativeSelect>\n\n            <NativeSelect\n              style={{\n                marginRight: '10px',\n              }}\n              value={state.sigoonCode}\n              onChange={e => {\n                this.handleChange('sigoonCode', e);\n              }}\n            >\n              <option>시/군 선택</option>\n              {sigoonList.map((item, index) => {\n                return (\n                  <option key={index} value={item.admCode}>\n                    {item.admCodeNm}\n                  </option>\n                );\n              })}\n            </NativeSelect>\n\n            <NativeSelect\n              style={{\n                marginRight: '20px',\n              }}\n              value={state.dongCode}\n              onChange={e => {\n                this.handleChange('dongCode', e);\n              }}\n            >\n              <option>동 선택</option>\n              {dongList.map((item, index) => {\n                return (\n                  <option key={index} value={item.admCode}>\n                    {item.admCodeNm}\n                  </option>\n                );\n              })}\n            </NativeSelect>\n            <Button color=\"secondary\" onClick={this.onClickSelectSearchBtn}>\n              검색하기<Icon>search</Icon>\n            </Button>\n          </div>\n          <div>\n            <Input\n              placeholder=\"주소\"\n              value={searchStr}\n              onChange={e => {\n                this.setState({\n                  ...this.state,\n                  searchStr: e.target.value,\n                });\n              }}\n              onKeyUp={e => {\n                if (e.keyCode === 13) {\n                  this.onClickBubjungdongSearchBtn();\n                }\n              }}\n            />\n            <Button color=\"secondary\" onClick={this.onClickBubjungdongSearchBtn}>\n              법정동 검색하기<Icon>search</Icon>\n            </Button>\n          </div>\n          <div>\n            {searchResultList.map((item, index) => {\n              return (\n                <Chip\n                  key={index}\n                  size=\"small\"\n                  label={item.name}\n                  onClick={() => {\n                    this.onClickChips(item);\n                  }}\n                  deleteIcon={<Icon>search</Icon>}\n                  color={searchCode === item.code ? 'primary' : 'default'}\n                  style={{ margin: '5px 5px' }}\n                />\n              );\n            })}\n          </div>\n          <div\n            style={{\n              marginTop: '10px',\n            }}\n          >\n            <TableContainer component={Paper}>\n              <Table stickyHeader aria-label=\"simple table\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell>대지위치</TableCell>\n                    <TableCell>대지구분코드</TableCell>\n                    <TableCell>건물명</TableCell>\n                    <TableCell>대지면적</TableCell>\n                    <TableCell>건축면적</TableCell>\n\n                    <TableCell>용적률</TableCell>\n                    <TableCell>주건축물수</TableCell>\n                    <TableCell>부속건축물동수</TableCell>\n                    <TableCell>주용도코드명</TableCell>\n                    <TableCell>세대수</TableCell>\n                    <TableCell>호수</TableCell>\n                    <TableCell>가구수</TableCell>\n                    <TableCell>총주차수</TableCell>\n\n                    <TableCell>착공예정일</TableCell>\n                    <TableCell>착공연기일</TableCell>\n                    <TableCell>실제착공일</TableCell>\n                    <TableCell>건축허가일</TableCell>\n                    <TableCell>사용승인일</TableCell>\n\n                    <TableCell>실호세대수</TableCell>\n                    <TableCell>실호세대수면적</TableCell>\n\n                    <TableCell>생성일자</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {!tableTotalCount ? (\n                    <TableRow>\n                      <TableCell colSpan={21}>데이터가 없습니다.</TableCell>\n                    </TableRow>\n                  ) : null}\n                  {tableList.map((item, index) => (\n                    <TableRow key={index}>\n                      <TableCell>{item.platPlc}</TableCell>\n                      <TableCell>{item.platGbCd}</TableCell>\n                      <TableCell>{item.bldNm}</TableCell>\n                      <TableCell>{item.platArea}</TableCell>\n                      <TableCell>{item.archArea}</TableCell>\n\n                      <TableCell>{item.vlRat}</TableCell>\n                      <TableCell>{item.mainBldCnt}</TableCell>\n                      <TableCell>{item.atchBldDongCnt}</TableCell>\n                      <TableCell>{item.mainPurpsCdNm}</TableCell>\n                      <TableCell>{item.hhldCnt}</TableCell>\n                      <TableCell>{item.hoCnt}</TableCell>\n                      <TableCell>{item.fmlyCnt}</TableCell>\n                      <TableCell>{item.totPkngCnt}</TableCell>\n\n                      <TableCell>{item.stcnsSchedDay}</TableCell>\n                      <TableCell>{item.stcnsDelayDay}</TableCell>\n                      <TableCell>{item.realStcnsDay}</TableCell>\n                      <TableCell>{item.archPmsDay}</TableCell>\n                      <TableCell>{item.useAprDay}</TableCell>\n\n                      <TableCell>{item.silHoHhldCnt}</TableCell>\n                      <TableCell>{item.silHoHhldArea}</TableCell>\n\n                      <TableCell>{item.crtnDay}</TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n                <TableFooter>\n                  <TableRow>\n                    <TablePagination\n                      colSpan={21}\n                      count={+tableTotalCount}\n                      rowsPerPage={10}\n                      page={tablePage}\n                      SelectProps={{\n                        style: {\n                          display: 'none',\n                        },\n                      }}\n                      onChangePage={this.onChangePage}\n                    />\n                  </TableRow>\n                </TableFooter>\n              </Table>\n            </TableContainer>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport PropTypes from \"prop-types\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\n\nimport RecentlyTab from \"./RecentlyTab\";\nimport SearchTab from \"./SearchTab\";\n\nconst useStyles = makeStyles({\n  tabPanel: {\n    height: \"calc(100% - 48px)\"\n  }\n});\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography component=\"div\" role=\"tabpanel\" hidden={value !== index} id={`simple-tabpanel-${index}`} {...other}>\n      {value === index && (\n        <Box p={3} className=\"full-height\" style={{ padding: 0 }}>\n          {children}\n        </Box>\n      )}\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\n\nexport default function SimpleTabs() {\n  const [value, setValue] = React.useState(0);\n  const classes = useStyles();\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <React.Fragment>\n      <AppBar position=\"static\">\n        <Tabs value={value} onChange={handleChange}>\n          <Tab label=\"지역 검색하기 (실시간 조회)\" />\n          <Tab label=\"전국 최신 데이터 보기 (매주 목요일/금요일 수집 데이터 조회)\" />\n        </Tabs>\n      </AppBar>\n      <TabPanel className={classes.tabPanel} value={value} index={0}>\n        <SearchTab></SearchTab>\n      </TabPanel>\n      <TabPanel className={classes.tabPanel} value={value} index={1}>\n        <RecentlyTab></RecentlyTab>\n      </TabPanel>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./public/index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}