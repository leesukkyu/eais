{"version":3,"sources":["App.js","public/CONFIG.js","index.js"],"names":["App","props","state","searchMonth","sidoCode","sidoList","sigoonCode","sigoonList","dongCode","dongList","searchStr","searchCode","searchResultList","tableList","tablePage","tableTotalCount","handleChange","bind","$httpLoadArchInfo","onClickBubjungdongSearchBtn","onClickChips","onClickSelectSearchBtn","onChangePage","onChangeSearchMonth","this","$httpLoadSidoCodeList","item","setState","code","i","bubjungdongList","indexOf","push","name","obj","page","e","target","value","axios","get","params","authkey","then","data","admVOList","admCode","serviceKey","decodeURIComponent","sigunguCd","slice","bjdongCd","platGbCd","bun","ji","startDate","moment","subtract","format","endDate","numOfRows","pageNo","rs","items","totalCount","event","$httpLoadSigoonCodeList","$httpLoadDongCodeList","style","padding","margin","NativeSelect","onChange","marginRight","className","map","index","key","admCodeNm","Button","color","onClick","Icon","Input","placeholder","onKeyUp","keyCode","Chip","size","label","deleteIcon","marginTop","minWidth","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","TableBody","platPlc","bldNm","platArea","archArea","vlRat","mainBldCnt","atchBldDongCnt","mainPurpsCdNm","hhldCnt","hoCnt","fmlyCnt","totPkngCnt","stcnsSchedDay","stcnsDelayDay","realStcnsDay","archPmsDay","useAprDay","silHoHhldCnt","silHoHhldArea","crtnDay","TableFooter","TablePagination","colSpan","count","rowsPerPage","SelectProps","display","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cb07b2af.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./public/App.css\";\n\nimport axios from \"axios\";\n\nimport Chip from \"@material-ui/core/Chip\";\nimport Icon from \"@material-ui/core/Icon\";\nimport Input from \"@material-ui/core/Input\";\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\nimport Button from \"@material-ui/core/Button\";\n\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\n\nimport Paper from \"@material-ui/core/Paper\";\n\nimport bubjungdongList from \"./public/ADDRESS_DB.json\";\n\nimport moment from \"moment\";\n\nimport TablePagination from \"@material-ui/core/TablePagination\";\n\nimport {\n  SIDO_CODE_URL,\n  SIDO_CODE_KEY,\n  SIGOON_CODE_URL,\n  SIGOON_CODE_KEY,\n  DONG_CODE_URL,\n  DONG_CODE_KEY,\n  ARCH_URL,\n  ARCH_KEY\n} from \"./public/CONFIG\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchMonth: 6,\n\n      sidoCode: \"\",\n      sidoList: [],\n      sigoonCode: \"\",\n      sigoonList: [],\n      dongCode: \"\",\n      dongList: [],\n\n      searchStr: \"\",\n      searchCode: \"\",\n      searchResultList: [],\n\n      tableList: [],\n      tablePage: 0,\n      tableTotalCount: 0\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.$httpLoadArchInfo = this.$httpLoadArchInfo.bind(this);\n    this.onClickBubjungdongSearchBtn = this.onClickBubjungdongSearchBtn.bind(\n      this\n    );\n    this.onClickChips = this.onClickChips.bind(this);\n    this.onClickSelectSearchBtn = this.onClickSelectSearchBtn.bind(this);\n    this.onChangePage = this.onChangePage.bind(this);\n    this.onChangeSearchMonth = this.onChangeSearchMonth.bind(this);\n  }\n\n  componentDidMount() {\n    this.$httpLoadSidoCodeList();\n  }\n\n  onClickChips(item) {\n    this.setState(\n      {\n        ...this.state,\n        tableList: [],\n        tablePage: 0,\n        searchCode: item.code\n      },\n      () => {\n        this.$httpLoadArchInfo();\n      }\n    );\n  }\n\n  // 디비 검색\n  onClickBubjungdongSearchBtn() {\n    const { searchStr } = this.state;\n    const searchResultList = [];\n    for (var i in bubjungdongList) {\n      if (bubjungdongList[i].indexOf(searchStr) !== -1) {\n        // 현재는 동까지 정보가 입력되어야만 검색 가능\n        searchResultList.push({\n          code: i,\n          name: bubjungdongList[i]\n        });\n      }\n    }\n    this.setState({\n      ...this.state,\n      searchResultList\n    });\n  }\n\n  onClickSelectSearchBtn() {\n    this.setState(\n      {\n        ...this.state,\n        tableList: [],\n        tablePage: 0,\n        searchCode: this.state.dongCode + \"00\"\n      },\n      () => {\n        this.$httpLoadArchInfo();\n      }\n    );\n  }\n\n  onChangePage(obj, page) {\n    this.setState(\n      {\n        tableList: [],\n        tablePage: page\n      },\n      () => {\n        this.$httpLoadArchInfo();\n      }\n    );\n  }\n\n  onChangeSearchMonth(e) {\n    const { searchCode } = this.state;\n    if (searchCode) {\n      this.setState(\n        {\n          ...this.state,\n          searchMonth: e.target.value,\n          tableList: [],\n          tablePage: 0\n        },\n        () => {\n          this.$httpLoadArchInfo();\n        }\n      );\n    } else {\n      this.setState({\n        ...this.state,\n        searchMonth: e.target.value\n      });\n    }\n  }\n\n  $httpLoadSidoCodeList() {\n    axios\n      .get(SIDO_CODE_URL, {\n        params: { authkey: SIDO_CODE_KEY }\n      })\n      .then(({ data }) => {\n        this.setState({\n          ...this.state,\n          sidoList: data.admVOList.admVOList,\n          sidoCode: \"\",\n          sigoonCode: \"\",\n          sigoonList: [],\n          dongCode: \"\",\n          dongList: []\n        });\n      });\n  }\n\n  $httpLoadSigoonCodeList() {\n    const { sidoCode } = this.state;\n    axios\n      .get(SIGOON_CODE_URL, {\n        params: {\n          admCode: sidoCode,\n          authkey: SIGOON_CODE_KEY\n        }\n      })\n      .then(({ data }) => {\n        this.setState({\n          ...this.state,\n          sigoonCode: \"\",\n          sigoonList: data.admVOList.admVOList,\n          dongCode: \"\",\n          dongList: []\n        });\n      });\n  }\n\n  $httpLoadDongCodeList() {\n    const { sigoonCode } = this.state;\n    axios\n      .get(DONG_CODE_URL, {\n        params: {\n          admCode: sigoonCode,\n          authkey: DONG_CODE_KEY\n        }\n      })\n      .then(({ data }) => {\n        this.setState({\n          ...this.state,\n          dongCode: \"\",\n          dongList: data.admVOList.admVOList\n        });\n      });\n  }\n\n  $httpLoadArchInfo() {\n    const { searchCode, tablePage, searchMonth } = this.state;\n    axios\n      .get(ARCH_URL, {\n        params: {\n          serviceKey: decodeURIComponent(ARCH_KEY),\n          sigunguCd: searchCode.slice(0, 5),\n          bjdongCd: searchCode.slice(5, 10),\n          platGbCd: \"0\",\n          bun: \"\",\n          ji: \"\",\n          startDate: moment()\n            .subtract(+searchMonth, \"months\")\n            .format(\"YYYYMMDD\"),\n          endDate: moment().format(\"YYYYMMDD\"),\n          numOfRows: \"10\",\n          pageNo: tablePage == 0 ? 1 : tablePage\n        }\n      })\n      .then(rs => {\n        if (rs.data.items[0]) {\n          this.setState({\n            ...this.state,\n            tableList: rs.data.items[0].item,\n            tableTotalCount: rs.data.totalCount[0]\n          });\n        } else {\n          this.setState({\n            ...this.state,\n            tableList: [],\n            tableTotalCount: 0\n          });\n        }\n      });\n  }\n\n  handleChange(name, event) {\n    this.setState(\n      {\n        ...this.state,\n        [name]: event.target.value\n      },\n      () => {\n        const { searchCode } = this.state;\n        if (name === \"sidoCode\") {\n          this.$httpLoadSigoonCodeList();\n        } else if (name === \"sigoonCode\") {\n          this.$httpLoadDongCodeList();\n        }\n      }\n    );\n  }\n\n  render() {\n    const { state } = this;\n    const {\n      sidoList,\n      sigoonList,\n      dongList,\n      searchStr,\n      searchResultList,\n      searchCode,\n      tableList,\n      tablePage,\n      tableTotalCount\n    } = state;\n\n    return (\n      <div>\n        <div style={{ padding: \"25px\" }}>\n          <div style={{ margin: \"10px\" }}>\n            최근\n            <NativeSelect\n              value={state.searchMonth}\n              onChange={this.onChangeSearchMonth}\n            >\n              <option value=\"1\">1개월</option>\n              <option value=\"2\">2개월</option>\n              <option value=\"3\">3개월</option>\n              <option value=\"4\">4개월</option>\n              <option value=\"5\">5개월</option>\n              <option value=\"6\">6개월</option>\n              <option value=\"7\">7개월</option>\n              <option value=\"8\">8개월</option>\n              <option value=\"9\">9개월</option>\n              <option value=\"10\">10개월</option>\n              <option value=\"11\">11개월</option>\n              <option value=\"12\">12개월</option>\n            </NativeSelect>\n            개월간 검색\n          </div>\n          <div>\n            <NativeSelect\n              style={{\n                marginRight: \"10px\"\n              }}\n              className=\"mr-2\"\n              value={state.sidoCode}\n              onChange={e => {\n                this.handleChange(\"sidoCode\", e);\n              }}\n            >\n              <option>시/도 선택</option>\n              {sidoList.map((item, index) => {\n                return (\n                  <option key={index} value={item.admCode}>\n                    {item.admCodeNm}\n                  </option>\n                );\n              })}\n            </NativeSelect>\n\n            <NativeSelect\n              style={{\n                marginRight: \"10px\"\n              }}\n              value={state.sigoonCode}\n              onChange={e => {\n                this.handleChange(\"sigoonCode\", e);\n              }}\n            >\n              <option>시/군 선택</option>\n              {sigoonList.map((item, index) => {\n                return (\n                  <option key={index} value={item.admCode}>\n                    {item.admCodeNm}\n                  </option>\n                );\n              })}\n            </NativeSelect>\n\n            <NativeSelect\n              style={{\n                marginRight: \"20px\"\n              }}\n              value={state.dongCode}\n              onChange={e => {\n                this.handleChange(\"dongCode\", e);\n              }}\n            >\n              <option>동 선택</option>\n              {dongList.map((item, index) => {\n                return (\n                  <option key={index} value={item.admCode}>\n                    {item.admCodeNm}\n                  </option>\n                );\n              })}\n            </NativeSelect>\n            <Button color=\"secondary\" onClick={this.onClickSelectSearchBtn}>\n              검색하기<Icon>search</Icon>\n            </Button>\n          </div>\n          <div>\n            <Input\n              placeholder=\"주소\"\n              value={searchStr}\n              onChange={e => {\n                this.setState({\n                  ...this.state,\n                  searchStr: e.target.value\n                });\n              }}\n              onKeyUp={e => {\n                if (e.keyCode === 13) {\n                  this.onClickBubjungdongSearchBtn();\n                }\n              }}\n            />\n            <Button\n              color=\"secondary\"\n              onClick={this.onClickBubjungdongSearchBtn}\n            >\n              법정동 검색하기<Icon>search</Icon>\n            </Button>\n          </div>\n          <div>\n            {searchResultList.map((item, index) => {\n              return (\n                <Chip\n                  key={index}\n                  size=\"small\"\n                  label={item.name}\n                  onClick={() => {\n                    this.onClickChips(item);\n                  }}\n                  deleteIcon={<Icon>search</Icon>}\n                  color={searchCode === item.code ? \"primary\" : \"default\"}\n                  style={{ margin: \"5px 5px\" }}\n                />\n              );\n            })}\n          </div>\n          <div\n            style={{\n              marginTop: \"10px\",\n              minWidth: \"1400px\"\n            }}\n          >\n            <TableContainer component={Paper}>\n              <Table aria-label=\"simple table\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell>대지위치</TableCell>\n                    <TableCell>대지구분코드</TableCell>\n                    <TableCell>건물명</TableCell>\n                    <TableCell>대지면적</TableCell>\n                    <TableCell>건축면적</TableCell>\n\n                    <TableCell>용적률</TableCell>\n                    <TableCell>주건축물수</TableCell>\n                    <TableCell>부속건축물동수</TableCell>\n                    <TableCell>주용도코드명</TableCell>\n                    <TableCell>세대수</TableCell>\n                    <TableCell>호수</TableCell>\n                    <TableCell>가구수</TableCell>\n                    <TableCell>총주차수</TableCell>\n\n                    <TableCell>착공예정일</TableCell>\n                    <TableCell>착공연기일</TableCell>\n                    <TableCell>실제착공일</TableCell>\n                    <TableCell>건축허가일</TableCell>\n                    <TableCell>사용승인일</TableCell>\n\n                    <TableCell>실호세대수</TableCell>\n                    <TableCell>실호세대수면적</TableCell>\n\n                    <TableCell>생성일자</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {tableList.map((item, index) => (\n                    <TableRow key={index}>\n                      <TableCell>{item.platPlc}</TableCell>\n                      <TableCell>{item.platGbCd}</TableCell>\n                      <TableCell>{item.bldNm}</TableCell>\n                      <TableCell>{item.platArea}</TableCell>\n                      <TableCell>{item.archArea}</TableCell>\n\n                      <TableCell>{item.vlRat}</TableCell>\n                      <TableCell>{item.mainBldCnt}</TableCell>\n                      <TableCell>{item.atchBldDongCnt}</TableCell>\n                      <TableCell>{item.mainPurpsCdNm}</TableCell>\n                      <TableCell>{item.hhldCnt}</TableCell>\n                      <TableCell>{item.hoCnt}</TableCell>\n                      <TableCell>{item.fmlyCnt}</TableCell>\n                      <TableCell>{item.totPkngCnt}</TableCell>\n\n                      <TableCell>{item.stcnsSchedDay}</TableCell>\n                      <TableCell>{item.stcnsDelayDay}</TableCell>\n                      <TableCell>{item.realStcnsDay}</TableCell>\n                      <TableCell>{item.archPmsDay}</TableCell>\n                      <TableCell>{item.useAprDay}</TableCell>\n\n                      <TableCell>{item.silHoHhldCnt}</TableCell>\n                      <TableCell>{item.silHoHhldArea}</TableCell>\n\n                      <TableCell>{item.crtnDay}</TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n                <TableFooter>\n                  <TableRow>\n                    <TablePagination\n                      colSpan={21}\n                      count={tableTotalCount}\n                      rowsPerPage={10}\n                      page={tablePage}\n                      SelectProps={{\n                        style: {\n                          display: \"none\"\n                        }\n                      }}\n                      onChangePage={this.onChangePage}\n                    />\n                  </TableRow>\n                </TableFooter>\n              </Table>\n            </TableContainer>\n            {!tableTotalCount ? <div>데이터가 없습니다.</div> : null}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","export const SEARCH_MONTH = 6;\nexport const SIDO_CODE_URL =\n  \"http://openapi.nsdi.go.kr/nsdi/eios/service/rest/AdmService/admCodeList.json\";\nexport const SIDO_CODE_KEY = \"12685d425f1af0872d756c\";\nexport const SIGOON_CODE_URL =\n  \"http://openapi.nsdi.go.kr/nsdi/eios/service/rest/AdmService/admSiList.json\";\nexport const SIGOON_CODE_KEY = \"b0888bae39fbd0463a9252\";\nexport const DONG_CODE_URL =\n  \"http://openapi.nsdi.go.kr/nsdi/eios/service/rest/AdmService/admDongList.json\";\nexport const DONG_CODE_KEY = \"91afccaa8d7f499151ee3b\";\n\nexport const ARCH_URL = \"/api/getList\";\nexport const ARCH_KEY =\n  \"uu2nV0CiVbjDhdcZyHf0FmfnmNdXX45Af3Ukoih3pf4i1kKriVsxdGcmWjx7DBgGRFIlVYxhOmboQu4By9X1vQ%3D%3D\";\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./public/index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}